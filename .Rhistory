title,
levels =
d1 %>%
distinct(title, mape) %>%
arrange(mape) %>%
pull(title)
))
} %>%
ggplot()+
geom_line(aes(x = date, y = y_actual,color = "Actual"),linewidth = 0.9)+
geom_line(aes(x = date, y = y_pred,color = "Predicted"),linewidth = 0.9)+
scale_color_manual(values = c("orange","lightblue"))+
labs(x = NULL, y = "CPI (YoY)",color = NULL,title = data$data_type2 %>% unique())+
facet_wrap(~title)+
theme_bw()+
theme(
legend.position = "bottom",
plot.title = element_text(size = 15,hjust = 0.5,margin = margin(t = 10, b = 10)),
legend.text = element_text(size = 12)
)
})
plots <-
model_results %>%
mutate(
data_type2 = case_when(
data_type=="data_only_inflation_var"~"With only inflation variables - like WPI, CPI and SPI and also USD/PKR - as well as their lags",
data_type=="data_with_multi_variables"~"With a dataset consisting of multiple high frequency demand and supply-side indicators",
data_type=="data_with_multi_variables_fert_excluded"~"With a dataset consisting of multiple high frequency demand and supply-side indicators (excluding fertilizer sales)",
)
) %>%
semi_join(
mape_top12,by = c("data_type","model")
) %>%
split(.$data_type) %>%
set_names() %>%
map(function(data){
data %>%
mutate(title = paste(model, round(mape, 3), sep = " -- ")) %>%
{
d1 <- .
d1 %>%
mutate(title = factor(
title,
levels =
d1 %>%
distinct(title, mape) %>%
arrange(mape) %>%
pull(title)
))
} %>%
ggplot()+
geom_line(aes(x = date, y = y_actual,color = "Actual"),linewidth = 0.9)+
geom_line(aes(x = date, y = y_pred,color = "Predicted"),linewidth = 0.9)+
scale_color_manual(values = c("orange","lightblue"))+
labs(x = NULL, y = "CPI (YoY)",color = NULL,title = data$data_type2 %>% unique())+
facet_wrap(~title)+
theme_bw()+
theme(
legend.position = "bottom",
plot.title = element_text(size = 15,hjust = 0.5,margin = margin(t = 10, b = 10)),
legend.text = element_text(size = 12)
)
})
plots
plots %>% names()
model_results %>%
mutate(
data_type2 = case_when(
data_type=="data_only_inflation_var"~"With only inflation variables - like WPI, CPI and SPI and also USD/PKR - as well as their lags",
data_type=="data_with_multi_variables"~"With a dataset consisting of multiple high frequency demand and supply-side indicators",
data_type=="data_with_multi_variables_fert_excluded"~"With a dataset consisting of multiple high frequency demand and supply-side indicators (excluding fertilizer sales)",
)
) %>%
semi_join(
mape_top12,by = c("data_type","model")
) %>%
split(.$data_type) %>%
set_names()
model_results %>%
mutate(
data_type2 = case_when(
data_type=="data_only_inflation_var"~"With only inflation variables - like WPI, CPI and SPI and also USD/PKR - as well as their lags",
data_type=="data_with_multi_variables"~"With a dataset consisting of multiple high frequency demand and supply-side indicators",
data_type=="data_with_multi_variables_fert_excluded"~"With a dataset consisting of multiple high frequency demand and supply-side indicators (excluding fertilizer sales)",
)
) %>%
semi_join(
mape_top12,by = c("data_type","model")
) %>%
split(.$data_type)
plots <-
model_results %>%
mutate(
data_type2 = case_when(
data_type=="data_only_inflation_var"~"With only inflation variables - like WPI, CPI and SPI and also USD/PKR - as well as their lags",
data_type=="data_with_multi_variables"~"With a dataset consisting of multiple high frequency demand and supply-side indicators",
data_type=="data_with_multi_variables_fert_excluded"~"With a dataset consisting of multiple high frequency demand and supply-side indicators (excluding fertilizer sales)",
)
) %>%
semi_join(
mape_top12,by = c("data_type","model")
) %>%
split(.$data_type)  %>%
imap(function(data,y){
browser()
ind <- match(y,names())
data %>%
mutate(title = paste(model, round(mape, 3), sep = " -- ")) %>%
{
d1 <- .
d1 %>%
mutate(title = factor(
title,
levels =
d1 %>%
distinct(title, mape) %>%
arrange(mape) %>%
pull(title)
))
} %>%
ggplot()+
geom_line(aes(x = date, y = y_actual,color = "Actual"),linewidth = 0.9)+
geom_line(aes(x = date, y = y_pred,color = "Predicted"),linewidth = 0.9)+
scale_color_manual(values = c("orange","lightblue"))+
labs(x = NULL, y = "CPI (YoY)",color = NULL,title = data$data_type2 %>% unique())+
facet_wrap(~title)+
theme_bw()+
theme(
legend.position = "bottom",
plot.title = element_text(size = 15,hjust = 0.5,margin = margin(t = 10, b = 10)),
legend.text = element_text(size = 12)
)+
ggsave(filename = paste0("plot",))
})
y
x
.x
data
.y
.
match(y,names(.))
plots <-
model_results %>%
mutate(
data_type2 = case_when(
data_type=="data_only_inflation_var"~"With only inflation variables - like WPI, CPI and SPI and also USD/PKR - as well as their lags",
data_type=="data_with_multi_variables"~"With a dataset consisting of multiple high frequency demand and supply-side indicators",
data_type=="data_with_multi_variables_fert_excluded"~"With a dataset consisting of multiple high frequency demand and supply-side indicators (excluding fertilizer sales)",
)
) %>%
semi_join(
mape_top12,by = c("data_type","model")
) %>%
split(.$data_type)  %>%
imap(function(data,y){
ind <- match(y,names(.))
data %>%
mutate(title = paste(model, round(mape, 3), sep = " -- ")) %>%
{
d1 <- .
d1 %>%
mutate(title = factor(
title,
levels =
d1 %>%
distinct(title, mape) %>%
arrange(mape) %>%
pull(title)
))
} %>%
ggplot()+
geom_line(aes(x = date, y = y_actual,color = "Actual"),linewidth = 0.9)+
geom_line(aes(x = date, y = y_pred,color = "Predicted"),linewidth = 0.9)+
scale_color_manual(values = c("orange","lightblue"))+
labs(x = NULL, y = "CPI (YoY)",color = NULL,title = data$data_type2 %>% unique())+
facet_wrap(~title)+
theme_bw()+
theme(
legend.position = "bottom",
plot.title = element_text(size = 15,hjust = 0.5,margin = margin(t = 10, b = 10)),
legend.text = element_text(size = 12)
)+
ggsave(filename = paste0("plot",ind,".pdf",width = 14, height = 10))
})
plots <-
model_results %>%
mutate(
data_type2 = case_when(
data_type=="data_only_inflation_var"~"With only inflation variables - like WPI, CPI and SPI and also USD/PKR - as well as their lags",
data_type=="data_with_multi_variables"~"With a dataset consisting of multiple high frequency demand and supply-side indicators",
data_type=="data_with_multi_variables_fert_excluded"~"With a dataset consisting of multiple high frequency demand and supply-side indicators (excluding fertilizer sales)",
)
) %>%
semi_join(
mape_top12,by = c("data_type","model")
) %>%
split(.$data_type)  %>%
imap(function(data,y){
ind <- match(y,names(.))
data %>%
mutate(title = paste(model, round(mape, 3), sep = " -- ")) %>%
{
d1 <- .
d1 %>%
mutate(title = factor(
title,
levels =
d1 %>%
distinct(title, mape) %>%
arrange(mape) %>%
pull(title)
))
} %>%
ggplot()+
geom_line(aes(x = date, y = y_actual,color = "Actual"),linewidth = 0.9)+
geom_line(aes(x = date, y = y_pred,color = "Predicted"),linewidth = 0.9)+
scale_color_manual(values = c("orange","lightblue"))+
labs(x = NULL, y = "CPI (YoY)",color = NULL,title = data$data_type2 %>% unique())+
facet_wrap(~title)+
theme_bw()+
theme(
legend.position = "bottom",
plot.title = element_text(size = 15,hjust = 0.5,margin = margin(t = 10, b = 10)),
legend.text = element_text(size = 12)
)+
ggsave(filename = paste0("plot_",ind,".pdf"),width = 14, height = 10))
plots <-
model_results %>%
mutate(
data_type2 = case_when(
data_type=="data_only_inflation_var"~"With only inflation variables - like WPI, CPI and SPI and also USD/PKR - as well as their lags",
data_type=="data_with_multi_variables"~"With a dataset consisting of multiple high frequency demand and supply-side indicators",
data_type=="data_with_multi_variables_fert_excluded"~"With a dataset consisting of multiple high frequency demand and supply-side indicators (excluding fertilizer sales)",
)
) %>%
semi_join(
mape_top12,by = c("data_type","model")
) %>%
split(.$data_type)  %>%
imap(function(data,y){
ind <- match(y,names(.))
data %>%
mutate(title = paste(model, round(mape, 3), sep = " -- ")) %>%
{
d1 <- .
d1 %>%
mutate(title = factor(
title,
levels =
d1 %>%
distinct(title, mape) %>%
arrange(mape) %>%
pull(title)
))
} %>%
ggplot()+
geom_line(aes(x = date, y = y_actual,color = "Actual"),linewidth = 0.9)+
geom_line(aes(x = date, y = y_pred,color = "Predicted"),linewidth = 0.9)+
scale_color_manual(values = c("orange","lightblue"))+
labs(x = NULL, y = "CPI (YoY)",color = NULL,title = data$data_type2 %>% unique())+
facet_wrap(~title)+
theme_bw()+
theme(
legend.position = "bottom",
plot.title = element_text(size = 15,hjust = 0.5,margin = margin(t = 10, b = 10)),
legend.text = element_text(size = 12)
)+
ggsave(filename = paste0("plot_",ind,".pdf"),width = 14, height = 10)
})
plots <-
model_results %>%
mutate(
data_type2 = case_when(
data_type=="data_only_inflation_var"~"With only inflation variables - like WPI, CPI and SPI and also USD/PKR - as well as their lags",
data_type=="data_with_multi_variables"~"With a dataset consisting of multiple high frequency demand and supply-side indicators",
data_type=="data_with_multi_variables_fert_excluded"~"With a dataset consisting of multiple high frequency demand and supply-side indicators (excluding fertilizer sales)",
)
) %>%
semi_join(
mape_top12,by = c("data_type","model")
) %>%
split(.$data_type)  %>%
imap(function(data,y){
ind <- match(y,names(.))
p <-
data %>%
mutate(title = paste(model, round(mape, 3), sep = " -- ")) %>%
{
d1 <- .
d1 %>%
mutate(title = factor(
title,
levels =
d1 %>%
distinct(title, mape) %>%
arrange(mape) %>%
pull(title)
))
} %>%
ggplot()+
geom_line(aes(x = date, y = y_actual,color = "Actual"),linewidth = 0.9)+
geom_line(aes(x = date, y = y_pred,color = "Predicted"),linewidth = 0.9)+
scale_color_manual(values = c("orange","lightblue"))+
labs(x = NULL, y = "CPI (YoY)",color = NULL,title = data$data_type2 %>% unique())+
facet_wrap(~title)+
theme_bw()+
theme(
legend.position = "bottom",
plot.title = element_text(size = 15,hjust = 0.5,margin = margin(t = 10, b = 10)),
legend.text = element_text(size = 12)
)
ggsave(plot = p,filename = paste0("plot_",ind,".pdf"),width = 14, height = 10)
})
p <-
data %>%
mutate(title = paste(model, round(mape, 3), sep = " -- ")) %>%
{
d1 <- .
d1 %>%
mutate(title = factor(
title,
levels =
d1 %>%
distinct(title, mape) %>%
arrange(mape) %>%
pull(title)
))
} %>%
ggplot()+
geom_line(aes(x = date, y = y_actual,color = "Actual"),linewidth = 0.8)+
geom_line(aes(x = date, y = y_pred,color = "Predicted"),linewidth = 0.8)+
scale_color_manual(values = c("orange","lightblue"))+
labs(x = NULL, y = "CPI (YoY)",color = NULL,title = data$data_type2 %>% unique())+
facet_wrap(~title)+
theme_bw()+
theme(
legend.position = "bottom",
plot.title = element_text(size = 15,hjust = 0.5,margin = margin(t = 10, b = 10)),
legend.text = element_text(size = 12)
)
ggsave(plot = p,filename = paste0("plot_",ind,".pdf"),width = 14, height = 10)
plots <-
model_results %>%
mutate(
data_type2 = case_when(
data_type=="data_only_inflation_var"~"With only inflation variables - like WPI, CPI and SPI and also USD/PKR - as well as their lags",
data_type=="data_with_multi_variables"~"With a dataset consisting of multiple high frequency demand and supply-side indicators",
data_type=="data_with_multi_variables_fert_excluded"~"With a dataset consisting of multiple high frequency demand and supply-side indicators (excluding fertilizer sales)",
)
) %>%
semi_join(
mape_top12,by = c("data_type","model")
) %>%
split(.$data_type)  %>%
imap(function(data,y){
ind <- match(y,names(.))
p <-
data %>%
mutate(title = paste(model, round(mape, 3), sep = " -- ")) %>%
{
d1 <- .
d1 %>%
mutate(title = factor(
title,
levels =
d1 %>%
distinct(title, mape) %>%
arrange(mape) %>%
pull(title)
))
} %>%
ggplot()+
geom_line(aes(x = date, y = y_actual,color = "Actual"),linewidth = 0.8)+
geom_line(aes(x = date, y = y_pred,color = "Predicted"),linewidth = 0.8)+
scale_color_manual(values = c("orange","lightblue"))+
labs(x = NULL, y = "CPI (YoY)",color = NULL,title = data$data_type2 %>% unique())+
facet_wrap(~title)+
theme_bw()+
theme(
legend.position = "bottom",
plot.title = element_text(size = 15,hjust = 0.5,margin = margin(t = 10, b = 10)),
legend.text = element_text(size = 12)
)
ggsave(plot = p,filename = paste0("plot_",ind,".pdf"),width = 14, height = 10)
})
model_results %>%
filter(data_type=="data_only_inflation_var",
model=="False_0.95_0.7_normal_5") %>%
filter(date>=ymd("2007-1-1")) %>%
mutate(
year = year(date),
date = ymd(paste(year(date),month(date),1,sep = "-"))
)
model_results %>%
filter(data_type=="data_only_inflation_var",
model=="False_0.95_0.7_normal_5") %>%
filter(date>=ymd("2007-1-1")) %>%
mutate(
year = year(date),
date = ymd(paste(year(date),month(date),1,sep = "-"))
) %>%
ggplot()+
geom_line(aes(x = date, y = y_actual),linewidth = 0.8,color = "Actual")+
geom_line(aes(x = date, y = y_pred),linewidth = 0.8,color = "Predicted")+
scale_color_manual(values = c("lightblue","orange"))+
scale_x_date(date_labels = "%b")+
labs(x = NULL, y = "CPI (YoY)")
model_results %>%
filter(data_type=="data_only_inflation_var",
model=="False_0.95_0.7_normal_5") %>%
filter(date>=ymd("2007-1-1")) %>%
mutate(
year = year(date),
date = ymd(paste(year(date),month(date),1,sep = "-"))
) %>%
ggplot()+
geom_line(aes(x = date, y = y_actual,color = "Actual"),linewidth = 0.8)+
geom_line(aes(x = date, y = y_pred,color = "Predicted"),linewidth = 0.8)+
scale_color_manual(values = c("lightblue","orange"))+
scale_x_date(date_labels = "%b")+
labs(x = NULL, y = "CPI (YoY)")
theme_bw()+
facet_wrap(~year,scales = "free_x")
model_results %>%
filter(data_type=="data_only_inflation_var",
model=="False_0.95_0.7_normal_5") %>%
filter(date>=ymd("2007-1-1")) %>%
mutate(
year = year(date),
date = ymd(paste(year(date),month(date),1,sep = "-"))
) %>%
ggplot()
model_results %>%
filter(data_type=="data_only_inflation_var",
model=="False_0.95_0.7_normal_5") %>%
filter(date>=ymd("2007-1-1")) %>%
mutate(
year = year(date),
date = ymd(paste(year(date),month(date),1,sep = "-"))
) %>%
ggplot()+
geom_line(aes(x = date, y = y_actual,color = "Actual"),linewidth = 0.8)+
geom_line(aes(x = date, y = y_pred,color = "Predicted"),linewidth = 0.8)
model_results %>%
filter(data_type=="data_only_inflation_var",
model=="False_0.95_0.7_normal_5") %>%
filter(date>=ymd("2007-1-1")) %>%
mutate(
year = year(date),
date = ymd(paste(year(date),month(date),1,sep = "-"))
) %>%
ggplot()+
geom_line(aes(x = date, y = y_actual,color = "Actual"),linewidth = 0.8)+
geom_line(aes(x = date, y = y_pred,color = "Predicted"),linewidth = 0.8)+
scale_color_manual(values = c("lightblue","orange"))
model_results %>%
filter(data_type=="data_only_inflation_var",
model=="False_0.95_0.7_normal_5") %>%
filter(date>=ymd("2007-1-1")) %>%
mutate(
year = year(date),
date = ymd(paste(year(date),month(date),1,sep = "-"))
) %>%
ggplot()+
geom_line(aes(x = date, y = y_actual,color = "Actual"),linewidth = 0.8)+
geom_line(aes(x = date, y = y_pred,color = "Predicted"),linewidth = 0.8)+
scale_color_manual(values = c("lightblue","orange"))+
scale_x_date(date_labels = "%b")+
labs(x = NULL, y = "CPI (YoY)")+
theme_bw()+
facet_wrap(~year,scales = "free_x")
model_results %>%
filter(data_type=="data_only_inflation_var",
model=="False_0.95_0.7_normal_5") %>%
filter(date>=ymd("2007-1-1")) %>%
mutate(
year = year(date),
date = ymd(paste(year(date),month(date),1,sep = "-"))
) %>%
ggplot()+
geom_line(aes(x = date, y = y_actual,color = "Actual"),linewidth = 0.8)+
geom_line(aes(x = date, y = y_pred,color = "Predicted"),linewidth = 0.8)+
scale_color_manual(values = c("lightblue","orange"))+
scale_x_date(date_labels = "%b")+
labs(x = NULL, y = "CPI (YoY)",color = NULL,title = "Best Performing Model")+
theme_bw()+
theme(
legend.position = "bottom"
)+
facet_wrap(~year,scales = "free_x")
model_results %>%
filter(data_type=="data_only_inflation_var",
model=="False_0.95_0.7_normal_5") %>%
filter(date>=ymd("2007-1-1")) %>%
mutate(
year = year(date),
date = ymd(paste(year(date),month(date),1,sep = "-"))
) %>%
ggplot()+
geom_line(aes(x = date, y = y_actual,color = "Actual"),linewidth = 0.8)+
geom_line(aes(x = date, y = y_pred,color = "Predicted"),linewidth = 0.8)+
scale_color_manual(values = c("lightblue","orange"))+
scale_x_date(date_labels = "%b")+
labs(x = NULL, y = "CPI (YoY)",color = NULL,title = "Best Performing Model")+
theme_bw()+
theme(
legend.position = "bottom",
plot.title = element_text(size = 15,hjust = 0.5,margin = margin(t = 10, b = 10)),
legend.text = element_text(size = 12)
)+
facet_wrap(~year,scales = "free_x")+
ggsave(filename = "best_model.pdf",width = 14, height = 10)
